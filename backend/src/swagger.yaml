openapi: 3.0.0
info:
  title: The Vibes Motel API
  description: API pour gérer les opérations du motel "The Vibes" : enregistrement des séjours, gestion des chambres, dépenses, rapports, etc.
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
    description: Serveur local de développement
paths:
  /auth/register:
    post:
      summary: Enregistrer un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [admin, employee]
      responses:
        '201':
          description: Utilisateur enregistré
  /auth/login:
    post:
      summary: Connexion utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Token JWT retourné
        '401':
          description: Identifiants invalides
  /rooms:
    get:
      summary: Lister toutes les chambres
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des chambres
    post:
      summary: Ajouter une nouvelle chambre (admin seulement)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                type:
                  type: string
                  enum: [standard, deluxe]
      responses:
        '201':
          description: Chambre ajoutée
  /rooms/{id}:
    put:
      summary: Éditer une chambre (admin seulement)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
                type:
                  type: string
      responses:
        '200':
          description: Chambre mise à jour
    delete:
      summary: Supprimer une chambre (admin seulement)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chambre supprimée
  /stays:
    post:
      summary: Ajouter un séjour
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  type: string
                hours:
                  type: number
                isNight:
                  type: boolean
                amount:
                  type: number
      responses:
        '201':
          description: Séjour ajouté
    get:
      summary: Lister les séjours (avec filtres)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: date
          schema:
            type: string
        - in: query
          name: roomId
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
      responses:
        '200':
          description: Liste des séjours
  /stays/{id}/end:
    put:
      summary: Terminer un séjour
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Séjour terminé
  /expenses:
    post:
      summary: Ajouter une dépense
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                amount:
                  type: number
      responses:
        '201':
          description: Dépense ajoutée
    get:
      summary: Lister les dépenses (avec filtre date)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: date
          schema:
            type: string
      responses:
        '200':
          description: Liste des dépenses
  /reports/daily:
    get:
      summary: Rapport journalier (admin seulement)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: date
          schema:
            type: string
      responses:
        '200':
          description: Rapport (income, expenses, remaining)
  /reports/export/pdf:
    get:
      summary: Exporter rapport en PDF (admin seulement)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: date
          schema:
            type: string
      responses:
        '200':
          description: Fichier PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  /reports/export/excel:
    get:
      summary: Exporter rapport en Excel (admin seulement)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: date
          schema:
            type: string
      responses:
        '200':
          description: Fichier Excel
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
  /reports/receipt/{stayId}:
    get:
      summary: Générer un reçu PDF pour un séjour
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: stayId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Reçu PDF
          content:
            application/pdf:
              schema:
                type: string
                format: binary
  /users:
    get:
      summary: Lister les utilisateurs (admin seulement)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des utilisateurs
    post:
      summary: Ajouter un utilisateur (admin seulement)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        '201':
          description: Utilisateur ajouté
  /users/{id}:
    put:
      summary: Éditer un utilisateur (admin seulement)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        '200':
          description: Utilisateur mis à jour
    delete:
      summary: Supprimer un utilisateur (admin seulement)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Utilisateur supprimé
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT